/// <reference types="node" />
import { Agent } from 'https';
import { URL } from 'url';
import VK from '../vk';
import { CookieJar } from '../utils/fetch-cookie';
interface IAccountVerificationOptions {
    agent: Agent;
    login?: string;
    phone?: string | number;
}
export default class AccountVerification {
    protected vk: VK;
    protected options: IAccountVerificationOptions;
    jar: CookieJar;
    protected fetchCookie: Function;
    protected captchaValidate: any;
    protected captchaAttempts: number;
    protected twoFactorValidate: any;
    protected twoFactorAttempts: number;
    /**
     * Constructor
     */
    constructor(vk: VK);
    /**
     * Returns custom tag
     */
    readonly [Symbol.toStringTag]: string;
    /**
     * Executes the HTTP request
     */
    protected fetch(url: URL | string, options?: Record<string, any>): Promise<any>;
    /**
     * Runs authorization
     */
    run(redirectUri: string): Promise<Record<string, any>>;
    /**
     * Process two-factor form
     */
    protected processTwoFactorForm(response: any, $: any): Promise<any>;
    /**
     * Process security form
     */
    protected processSecurityForm(response: any, $: any): Promise<any>;
    /**
     * Process validation form
     */
    protected processValidateForm(response: any, $: any): Promise<any>;
    /**
     * Process captcha form
     */
    protected processCaptchaForm(response: any, $: any): Promise<any>;
}
export {};
