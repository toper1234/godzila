/// <reference types="node" />
import { inspect } from 'util';
import VK from '../vk';
import Chain from './chain';
export default class Collect {
    protected vk: VK;
    /**
     * constructor
     */
    constructor(vk: VK);
    /**
     * Returns custom tag
     */
    readonly [Symbol.toStringTag]: string;
    /**
     * Returns new Chain instance
     */
    chain(): Chain;
    /**
     * Call multiple executors
     *
     * @param {string} method
     * @param {Array}  queue
     *
     * @return {Promise<Array>}
     */
    executes(method: string, queue: Record<string, any>[]): Promise<{
        response: any[];
        errors: any[];
    }>;
    /**
     * Custom inspect object
     */
    [inspect.custom](depth: number, options: Record<string, any>): string;
}
