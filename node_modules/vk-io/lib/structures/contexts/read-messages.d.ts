import Context, { IContextOptions } from './context';
import { inspectCustomData } from '../../utils/constants';
export interface IReadMessagesContextPayload {
    id: number;
    peer_id: number;
}
export declare type ReadMessagesContextContextOptions<S> = Omit<IContextOptions<number[], S>, 'type' | 'subTypes'>;
export default class ReadMessagesContext<S = Record<string, any>> extends Context<IReadMessagesContextPayload, S> {
    constructor(options: ReadMessagesContextContextOptions<S>);
    /**
     * Checks that inbox messages are read
     */
    readonly isInbox: boolean;
    /**
     * Checks that outbox messages are read
     */
    readonly isOutbox: boolean;
    /**
     * Returns the ID before the message read
     */
    readonly id: number;
    /**
     * Returns the peer ID
     */
    readonly peerId: number;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
}
