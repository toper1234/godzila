import VK from '../../vk';
import Attachment from './attachment';
import { inspectCustomData } from '../../utils/constants';
export interface IVideoAttachmentPayload {
    id: number;
    owner_id: number;
    access_key: string;
    repeat?: number;
    can_add?: number;
    can_edit?: number;
    processing?: number;
    live?: number;
    upcoming?: number;
    is_favorite?: number;
    title?: string;
    description?: string;
    duration?: number;
    date?: number;
    adding_date?: number;
    views?: number;
    comments?: number;
    player?: string;
    platform?: string;
}
export default class VideoAttachment extends Attachment {
    protected vk: VK;
    protected payload: IVideoAttachmentPayload;
    /**
     * Constructor
     */
    constructor(payload: IVideoAttachmentPayload, vk: VK);
    /**
     * Load attachment payload
     */
    loadAttachmentPayload(): Promise<void>;
    /**
     * Checks whether the video is repeatable
     */
    readonly isRepeat: boolean | null;
    /**
     * Checks that the user can add a video to himself
     */
    readonly isCanAdd: boolean | null;
    /**
     * Checks if the user can edit the video
     */
    readonly isCanEdit: boolean | null;
    /**
     * Checks whether the video is being processed
     */
    readonly isProcessing: boolean | null;
    /**
     * Checks whether the video is a broadcast
     */
    readonly isBroadcast: boolean | null;
    /**
     * Checks whether the video is a broadcast
     */
    readonly isUpcoming: boolean | null;
    /**
     * Checks is bookmarked current user
     */
    readonly isFavorited: boolean | null;
    /**
     * Returns the title
     */
    readonly title: string | null;
    /**
     * Returns the description
     */
    readonly description: string | null;
    /**
     * Returns the duration
     */
    readonly duration: number | null;
    /**
     * Returns the date when this video was created
     */
    readonly createdAt: number | null;
    /**
     * Returns the date when this video was added
     */
    readonly addedAt: number | null;
    /**
     * Returns the count views
     */
    readonly viewsCount: number | null;
    /**
     * Returns the count comments
     */
    readonly commentsCount: number | null;
    /**
     * Returns the URL of the page with the player
     */
    readonly player: string | null;
    /**
     * Returns the name of the platform (for video recordings added from external sites)
     */
    readonly platformName: string | null;
    /**
     * Checks for a boolean value in the property
     */
    protected checkBooleanInProperty(name: string): boolean | null;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
}
